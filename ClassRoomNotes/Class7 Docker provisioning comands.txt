1) Build context name should be Dockerfile/dockerfile only, if instruction both are present then docker will choose Dockerfile. No other name is allowed

DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

unable to prepare context: unable to evaluate symlinks in Dockerfile path: lstat /root/Dockerfile: no such file or directory

2) To go inside a container >>> docker run -it <ImageName>:<TagName> /bin/bash

3) To exit from container >>> exit


FROM ubuntu
RUN apt-get update
RUN apt install openjdk-17-jre-headless -y
RUN wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
RUN echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
  https://pkg.jenkins.io/debian-stable binary/ | tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
RUN apt-get update
RUN apt-get install jenkins

rule1: remove all the sudo, it's not needed when we are dockerzing the file

Do you want to continue? [Y/n] Abort.
The command '/bin/sh -c apt-get install wget' returned a non-zero code: 1


FROM ubuntu
RUN apt-get update
RUN apt-get install gnupg -y
RUN apt-get update
RUN apt-get install wget -y
RUN apt-get update 
RUN apt-get install lsb-release -y
RUN wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
RUN apt update && apt install packer -y


FROM ubuntu
RUN apt-get update
RUN apt-get install gnupg -y
RUN apt-get update
RUN apt-get install wget -y
RUN apt-get update
RUN apt-get install lsb_release -y
RUN wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
RUN echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
RUN apt update && apt install packer -y


Rule for Image name
===================
1. **Lowercase Only**: Docker image names must be in lowercase. Uppercase letters are not allowed.
2. **Use Valid Characters**: Image names can include:
   - Lowercase letters (`a-z`)
   - Digits (`0-9`)
   - Dots (`.`)
   - Dashes (`-`)
   - Underscores (`_`)
3. **Name Components**: Docker image names can have multiple components separated by slashes (`/`). Each component must follow the same naming rules.
4. **Optional Namespace**: Docker image names can include a namespace (usually the username or organization name) followed by a slash (`/`). The namespace is optional but recommended for organization.
5. **Tags**: Image names can include a tag, which follows the image name and a colon (`:`). Tags are often used to specify versions. The tag must also be lowercase and can include letters, digits, dots, dashes, and underscores.

### Examples of Valid Docker Image Names:
- `myimage`
- `myorg/myimage`
- `myorg/myimage:latest`
- `myimage:v1.0.0`
- `myorg/myrepo/myimage`
- `myimage_with_underscore`.

Rule for container name:
========================
### Rules for Docker Container Names
1. **Lowercase and Uppercase Letters**: Both lowercase (`a-z`) and uppercase (`A-Z`) letters are allowed.
2. **Digits and Special Characters**: Digits (`0-9`), dots (`.`), dashes (`-`), and underscores (`_`) are allowed.
3. **Unique Names**: Container names must be unique within a single Docker host.

### Best Practices for Naming Docker Containers
1. **Descriptive Names**: Use names that clearly describe the container's purpose or the application it runs.
2. **Consistent Format**: Use a consistent naming convention to make it easier to identify and manage containers.
3. **Use Prefixes**: Consider using prefixes to group related containers (e.g., `webapp_`, `db_`).

### Common Naming Conventions
1. **Project-Based Naming**: Include the project name or abbreviation in the container name.
   - Example: `myproject_web`, `myproject_db`
2. **Role-Based Naming**: Name containers based on their role or service



why workdir
===========
https://stackoverflow.com/questions/58847410/difference-between-run-cd-and-workdir-in-dockerfile